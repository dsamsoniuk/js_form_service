class AssertAbstract{constructor(e){if(this.message=e,"function"!=typeof this.validate)throw new Error("Class must implement method 'validate'")}getMessage(){return this.message}}class AssertNotBlank extends AssertAbstract{constructor(e){super(e=e??"This field can not be empty")}validate(e){return null!==e&&""!==e&&void 0!==e}}class AssertNumber extends AssertAbstract{constructor(e,t,s,r,a){super(e=e??"This field must be number"),this.min=t??null,this.messageMin=r??"Number is too small",this.max=s??null,this.messageMax=a??"Number is too large"}validate(e){return!1!==/^\d+$/.test(e)&&(this.min&&this.min>e?(this.message=this.messageMin,!1):!(this.max&&this.max<e)||(this.message=this.messageMax,!1))}}class AssertLength extends AssertAbstract{constructor(e,t,s,r){super(),this.min=e??null,this.messageMin=s??"Text is too small",this.max=t??null,this.messageMax=r??"Text is too large"}validate(e){return this.min&&this.min>e.length?(this.message=this.messageMin,!1):!(this.max&&this.max<e.length)||(this.message=this.messageMax,!1)}}class AssertEmail extends AssertAbstract{constructor(e){super(e=e??"Email is incorrect")}validate(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}}class AssertFileRequired extends AssertAbstract{constructor(e,t,s){super(e=e??"This file is required"),this.messageFormat=t??"Wrong format file",this.allowFormats=s??[]}validate(e){if(e instanceof File==!1)return!1;return!1!=(""!=e.name)&&(!1!=(this.allowFormats==[]||!!this.allowFormats.includes(e.type))||(this.message=this.messageFormat,!1))}}class EventAbstract{constructor(){if("function"!=typeof this.init)throw new Error("Class must implement method 'init'")}}class FormAbstract{}class FieldType{constructor(e){this.constrains=e,this.value=null}}class FormCollection{constructor(e,t=[]){this.data=[],this.className=e,this.constrains=t}createObject(){return new this.className(this.constrains)}}class FormMapper{searchTree(e,t,s=null,r=function(){}){if(e instanceof FieldType)return r(e,s);if(e instanceof FormAbstract)for(let a in e)t[a]&&(s.stepsIndex+=this.buildStepIndex(s.stepsIndex,a),e[a]=this.searchTree(e[a],t[a],s,r));else if(e instanceof FormCollection)for(let a in t)void 0===e.data[a]&&(e.data[a]=e.createObject()),s.stepsIndex+=this.buildStepIndex(s.stepsIndex,a),e.data[a]=this.searchTree(e.data[a],t[a],s,r);return e}setFormData(e,t){for(let s of t.keys()){let r=this.groupToTreeString(s),a={value:t.get(s),fieldName:s,stepsIndex:""};e=this.searchTree(e,r,a,function(e,t){return a.stepsIndex===a.fieldName&&(e.value=t.value,e.fieldName=t.fieldName),e})}return e}groupToTreeString(e){const t={},s=e.replace(/\]/g,"").split("[");let r=t;return s.forEach((e,t)=>{r[e]||(r[e]={}),r=r[e]}),t}buildStepIndex(e,t){return""==e?t:"["+t+"]"}searchBranch(e,t=null,s=function(){}){if(e instanceof FieldType)return s(e,t);if(e instanceof FormAbstract)for(let r in e)e[r]=this.searchBranch(e[r],t,s);else if(e instanceof FormCollection)for(let r in e.data)e.data[r]=this.searchBranch(e.data[r],t,s);return e}}class FormValidator{validate(e){var t={isValid:!0};return(new FormMapper).searchBranch(e,t,this.validateField),t.isValid}validateField(e,t){e.error=[];for(let s in e.constrains){let r=e.constrains[s];r instanceof AssertAbstract!=!1?!1===r.validate(e.value)&&(e.error.push(r.getMessage()),t.isValid=!1):console.warn("ValidatorService: assert w constrains jest niepoprawny, pole: "+e.fieldName)}return e}}class FormErrorAbstract{constructor(){if("function"!=typeof this.clear)throw new Error("Class must implement method 'clear'");if("function"!=typeof this.showErrors)throw new Error("Class must implement method 'showErrors'")}}class FormErrorService extends FormErrorAbstract{clear(e){let t=e.getElementsByClassName("error-field");for(;t.length>0;)t[0].remove()}showErrors(e,t){(new FormMapper).searchBranch(e,{formElement:t},this.showError)}showError(e,t){if(void 0===e.error||null===e.error||0==e.error.length)return e;let s=t.formElement.elements[e.fieldName];var r=document.createElement("div");return r.classList.add("error-field"),r.style="color:red",r.setHTMLUnsafe(e.error.join("<br>")),0==s.parentNode.getElementsByClassName("error-field").length&&s.parentNode.append(r),e}}class TemplateServiceAbstract{constructor(){if("function"!=typeof this.render)throw new Error("Class must implement method 'render'")}}class TemplateService extends TemplateServiceAbstract{search(e){return`{@${e}@}`}replacePlaceholders(e,t){return e.querySelectorAll("*").forEach(e=>{for(const s of e.attributes){const r=s.value;let a=r;for(const[e,s]of Object.entries(t))a=a.replaceAll(this.search(e),s);a!==r&&e.setAttribute(s.name,a)}if(1===e.childNodes.length&&e.childNodes[0].nodeType===Node.TEXT_NODE){let s=e.textContent;for(const[e,r]of Object.entries(t))s=s.replaceAll(this.search(e),r);e.textContent=s}}),e}setPrototype(e){this.template=e.cloneNode(!0),this.template.style="",e.remove()}cloneTemplate(){return this.template.cloneNode(!0)}render(e){return this.replacePlaceholders(this.cloneTemplate(),e)}}